/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 * gradle clean publishToMavenLocal
 */
buildscript {
    ext {
        protobufVersion = '3.19.1'
        protobufPluginVersion = '0.8.18'
        grpcVersion = '1.42.1'
        reactiveGrpcVersion = '1.2.3'
    }
}
plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'java'
    id 'com.google.protobuf' version "${protobufPluginVersion}"
    id 'maven-publish'

}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
group = 'com.poc.api'
version = '0.0.1'
sourceCompatibility = JavaVersion.VERSION_11

dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation 'com.google.protobuf:protobuf-java:3.19.1'
    implementation 'io.projectreactor:reactor-core:3.4.12'
    implementation 'com.salesforce.servicelibs:reactor-grpc-stub:1.2.3'
    compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5'

}
protobuf {
    generatedFilesBaseDir = "$projectDir/src"
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
        reactor {
            artifact = "com.salesforce.servicelibs:reactor-grpc:${reactiveGrpcVersion}"
        }
    }
    generateProtoTasks {
        ofSourceSet("main")*.plugins {
            grpc { }
            reactor {}
        }
    }
}

sourceSets {
    main {
        proto {
            // You can add multiple location like next line
            // In addition to the default "src/main/proto"
            srcDir "src/main/grpc"
            srcDir "src/main/java"
        }
    }
    test {
        proto {
            // 'src/test/proto' plus
            srcDir 'src/test/protobuf'
        }
    }
}

task cleanProtoGen {
    doFirst {
        delete('src/main/grpc')
        delete('src/main/java')
    }
}
clean.dependsOn cleanProtoGen

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = "sources"
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'grpc-api'
            from components.java
        }
    }
}
